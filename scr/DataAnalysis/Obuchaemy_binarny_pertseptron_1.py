цифра = [0] * 3 * 5  # заполненная нулями матрица 3х5
цифры = цифра * 10  # резервируем память под маски 10-ти цифр
название = [""] * 10  # резервируем память под идентификаторы 10-ти цифр

название[0] = "ноль"  # задаём перцептрону начальное знание трёх шаблонов цифр
цифра[0] = \
    [0, 255, 0,
     255, 0, 255,
     255, 0, 255,
     255, 0, 255,
     0, 255, 0]
название[1] = "единица"
цифра[1] = \
    [0, 255, 0,
     255, 255, 0,
     0, 255, 0,
     0, 255, 0,
     1, 255, 1]
название[2] = "двойка"
цифра[2] = \
    [255, 255, 255,
     255, 0, 255,
     0, 0, 255,
     0, 255, 0,
     255, 255, 255]

знает = 3  # сколько цифр теперь знает перцептрон

бесконечно = True
while бесконечно:  # бесконечный повтор программы

    # пользователь вводит образ для распознования
    print(""" 
\nВведите построчно визуальный образ цифры по три элемента в строке.
Чёрные точки обозначайте единицами, белые точки нулями.
Цифры разделяйте пробелом.
Для выхода из программы введите 5\n
    """)
    максимальное = 0
    минимальное = 256
    искомое = [0] * 0  # резервируем память под переменную (список из 0 элементов заполненный нулями)
    for i in range(0, 5):  # повторяем 5 раз
        приглашение = "Введите " + str(i + 1) + "-ую строку образа: "  # формируем приглашение для ввода каждой строки
        строка = list(map(int, input(приглашение).split()))  # пользователь вводит данные в переменную СТРОКА
        for k in строка:
            максимальное = max(максимальное, k)
            минимальное = min(минимальное, k)
        if строка[0] == 5:
            exit()
        искомое = искомое + строка  # добавляем строку к переменной ИСКОМОЕ
    # теперь ИСКОМОЕ стало матрицей 3x5 пользовательский ввод завешён

    for i in range(0, знает):
        for j in range(0, 14):
            if цифра[i][j] > максимальное:
                цифра[i][j] = максимальное
            if цифра[i][j] < минимальное:
                цифра[i][j] = минимальное

    # теперь проводим поиск ИСКОМОГО среди известных программе образов
    известна = 0  # картинка нам неизвестна (пока не искали)
    for i in range(0, знает):  # перебираем все цифры, которые ЗНАЕТ программа
        несовпадение = 0  # предполагаем что ИСКОМОЕ совпадает с проверяемой ЦИФРОЙ
        for j in range(0, 14):  # для всех 15-ти элементов ЦИФРЫ
            индекс = abs(искомое[j] - цифра[i][j]) / максимальное
            if искомое[j] != цифра[i][j]:  # если найдены неравные элементы
                несовпадение += индекс  # отмечаем НЕСОВПАДЕНИЕ
        print(f"Я уверена что это {название[i]} на {(1 - несовпадение / 15) * 100}%")
        if несовпадение <= 2:  # если все 15 элементов ЦИФРЫ совпали с ИСКОМЫМ
            if (1 - несовпадение / 15) * 100 > 51:
                известна = 1  # отмечаем, что цифра нам известна и обучение не нужно
                print("\nЯ знаю эту цифру - это " + название[i])  # печатаем название цифры
                break  # и переходим на начало бесконечного цикла (ждём нового ввода от пользователя)
    if известна == 0:  # если цифра неизвестна
        print("Эта цифра мне неизвестна.")  # печатаем сообщение
        название[знает] = input("Введите её название: ")  # сохраняем, полученное от пользователя НАЗВАНИЕ
        цифра[знает] = искомое  # копируем содержимое введённого пользователем образа в пустое место списка ЦИФРЫ
        знает = знает + 1  # увеличиваем счётчик известных цифр на 1
        print("Спасибо, теперь я её знаю.\n")  # выводим сообщение
# возвращаемся к выполнению бесконечного цикла
'''
200 220 200
180 50 220
50 50 220
50 220 50
250 250 250
'''
# Задание:
# 1. Измените программу так, чтобы она распознавала цифры, если при вводе образа допущено не более двух ошибок.
# 2. Измените программу так, чтобы она выводила степень уверенности в распознавании введённой цифры.
# 3. Измените программу так, чтобы она распознавала полутоновые образы цифр с градациями тона от 0 до 255
#
